pipeline {
    agent any

    stages {

          stage("Code Checkout") {
            steps {
                echo "Cloning the code"
                git url: "https://github.com/rajraviojha/rajtest.git", branch: "main"
            }
        }

      stage("Virtual environment") {
            steps {
                echo "Create and activate virtual environment"
                sh "python3 -m venv myenv"
                sh"source myenv/bin/activate"                
                sh "myenv/bin/pip install selenium"
	     sh "myenv/bin/pip install selenium webdriver_manager"

            }
        }

        stage("Build Docker Image") {
            steps {
                echo "Building the image"
                catchError(buildResult: 'UNSTABLE') {
                    sh "docker build -t flask-app ."
                }
            }
        }

        stage("Push To Docker Hub") {
            steps {
                echo "pushing to docker hub"
                withCredentials([usernamePassword(credentialsId:"dockerHub",passwordVariable:"dockerHubPass",usernameVariable:"dockerHubUser")]){
                    sh "docker tag flask-app ${env.dockerHubUser}/flask-app:latest"
                    sh "docker login -u ${env.dockerHubUser} -p ${env.dockerHubPass}"
                    sh "docker push ${env.dockerHubUser}/flask-app:latest"
                }
            }
        }

        stage("Deploy") {
            steps {
                echo "Deploying to container"
                catchError(buildResult: 'UNSTABLE') {
                    sh "docker run -d -p 5000:5000 ${env.dockerHubUser}/flask-app:latest"
                    // Add a delay to allow the container to start up completely
                    sleep 30
                }
            }
        }

        stage("Selenium Test") {
            steps {
                echo "Running Selenium tests"
		sh 'python3 lastone.py'
             //   sh 'python3 app.py'
            //    sh 'python3 -m pytest'
            }
        }
    }
}
